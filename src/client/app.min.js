"use strict";function ResultSet(){this.loaded=!1,this.loading=!0}var module=angular.module("app",["cla.filters","cla.config","ui.utils","ui.router","ui.bootstrap","ui.bootstrap.popover","ui.select","ngSanitize","ngAnimate","ngCsv","angulartics","angulartics.google.analytics"]),filters=angular.module("cla.filters",[]);angular.module("cla.config",[]).provider("$config",function(){function Config($http){this.get=function(done){$http.get("/config").success(function(data,status){done(data||{},status)})}}this.$get=["$http",function($http){return new Config($http)}]}),angular.element(document).ready(function(){angular.bootstrap(document,["app"])}),module.config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$stateProvider.state("home",{url:"/",templateUrl:"/templates/home.html",controller:"HomeCtrl"}).state("home.settings",{templateUrl:"/templates/settings.html",controller:"SettingsCtrl",params:{user:{},owner:{},repo:{},gist:{}}}).state("cla",{abstract:!0,url:"/my-cla",template:"<section ui-view></section>"}).state("cla.myCla",{url:"",templateUrl:"/templates/my-cla.html",controller:"MyClaCtrl"}).state("repo",{abstract:!0,url:"/:user/:repo?pullRequest&redirect",template:"<section ui-view></section>"}).state("repo.cla",{url:"",templateUrl:"/templates/cla.html",controller:"ClaController"}).state("404",{url:"/404",templateUrl:"/templates/404.html"}),$urlRouterProvider.otherwise("/404"),$locationProvider.html5Mode({enabled:!0,requireBase:!1})}]).run(["$rootScope","$state","$stateParams","$config",function($rootScope,$state,$stateParams,$config){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$config.get(function(data){$rootScope.$config=data,data.gacode&&ga("create",data.gacode,"auto")})}]),ResultSet.prototype.set=function(error,value){this.loaded=!0,this.loading=!1,this.error=error,this.affix=value,this.value=this.value instanceof Array&&value instanceof Array?this.value.concat(value):value},module.factory("$RAW",["$q","$http",function($q,$http){return{call:function(m,functn,data,callback){var now=new Date;return $http.post("/api/"+m+"/"+functn,data).success(function(res){try{res=JSON.parse(res)}catch(ex){}callback(null,res,new Date-now)}).error(function(res){callback(res,null,new Date-now)})},get:function(url,user_token){var deferred=$q.defer(),header={};return header.Accept="application/vnd.github.moondragon+json",user_token&&(header.Authorization="token "+user_token),$http.get(url,{headers:header}).success(function(data){deferred.resolve(data)}).error(function(err){deferred.reject(err)}),deferred.promise}}}]),module.factory("$RPC",["$RAW","$log",function($RAW,$log){return{call:function(m,functn,data,callback){var res=new ResultSet;return $RAW.call(m,functn,data,function(error,value){res.set(error,value),$log.debug("$RPC",m,functn,data,res,res.error),"function"==typeof callback&&callback(res.error,res)}),res}}}]),module.factory("$HUB",["$RAW","$log",function($RAW,$log){function parse_link_header(header){if(0===header.length)throw new Error("input must not be of zero length");var parts=header.split(","),links={};return parts.forEach(function(p){var section=p.split(";");if(2!==section.length)throw new Error('section could not be split on ";"');var url=section[0].replace(/<(.*)>/,"$1").trim(),name=section[1].replace(/rel="(.*)"/,"$1").trim();links[name]=url}),links}var exec=function(type,res,args,call){return $RAW.call("github",type,args,function(error,value){var data=value?value.data:null,meta=value?value.meta:null;if(!data&&value&&(data=value),res.set(error,data),meta){res.meta=meta;var links=meta.link?parse_link_header(meta.link):null;res.hasMore=meta.hasMore||!!links&&!!links.next,res.getMore=res.hasMore?function(){res.loaded=!1,res.loading=!0,links.next?args.url=links.next:args.arg.page=args.arg.page+1||2,exec(type,res,args,call)}:null}$log.debug("$HUB",args,res,res.error),"function"==typeof call&&call(res.error,res)}),res};return{call:function(o,functn,data,callback){return exec("call",new ResultSet,{obj:o,fun:functn,arg:data},callback)},wrap:function(o,functn,data,callback){return exec("wrap",new ResultSet,{obj:o,fun:functn,arg:data},callback)}}}]),module.factory("$HUBService",["$q","$HUB",function($q,$HUB){var exec=function(type,o,functn,data,callback){var deferred=$q.defer();return $HUB[type](o,functn,data,function(err,obj){return"function"==typeof callback&&callback(err,obj),err||deferred.resolve(obj),deferred.reject(err)}),deferred.promise};return{call:function(o,functn,data,callback){return exec("call",o,functn,data,callback)},wrap:function(o,functn,data,callback){return exec("wrap",o,functn,data,callback)}}}]),module.factory("$RPCService",["$q","$RPC",function($q,$RPC){return{call:function(o,functn,data,callback){var deferred=$q.defer();return $RPC.call(o,functn,data,function(err,obj){return"function"==typeof callback&&callback(err,obj),err||deferred.resolve(obj),deferred.reject()}),deferred.promise}}}]),module.controller("ClaController",["$window","$scope","$stateParams","$RAW","$RPCService","$HUBService","$sce","$timeout","$http","$q","utils",function($window,$scope,$stateParams,$RAW,$RPCService,$HUBService,$sce,$timeout,$http,$q,utils){function getUserEmail(key){$HUBService.call("users","getEmails",{},function(err,data){data&&data.value&&data.value.some(function(email){return $scope.customValues[key]=email.primary?email.email:$scope.customValues[key],email.primary})})}function getGithubValues(){$scope.hasCustomFields&&$scope.user.value&&!$scope.signed&&$scope.customKeys.forEach(function(key){var githubKey=$scope.customFields[key].githubKey;githubKey&&($scope.customValues[key]=$scope.user.value[githubKey],"email"!==githubKey||$scope.user.value.email||getUserEmail(key))})}function getSignedValues(){$RPCService.call("cla","getLastSignature",{repo:$stateParams.repo,owner:$stateParams.user},function(err,res){if($scope.hasCustomFields&&res&&res.value&&res.value.custom_fields){var customFields=JSON.parse(res.value.custom_fields);$scope.customKeys.forEach(function(key){$scope.customValues[key]=customFields[key]})}$scope.isSharedSignature=isSharedSignature(res.value)})}function isSharedSignature(cla){return cla&&!cla.owner}function getCLA(){return utils.getGistContent($scope.linkedItem.repoId,$scope.linkedItem.orgId).then(function(gistContent){$scope.cla=$sce.trustAsHtml(gistContent.claText),$scope.cla.text=gistContent.claText,$scope.claText=gistContent.claText,$scope.customFields=gistContent.customFields,$scope.customKeys=gistContent.customKeys,$scope.hasCustomFields=gistContent.hasCustomFields},function(err){$scope.noLinkedItemError=err.message||err})}function checkCLA(){return $RPCService.call("cla","check",{repo:$stateParams.repo,owner:$stateParams.user},function(err,signed){!err&&signed.value?$scope.signed=!0:$scope.signed=!1})}$scope.cla=null,$scope.customFields={},$scope.customValues={},$scope.hasCustomFields=!1,$scope.linkedItem=null,$scope.noLinkedItemError=!1,$scope.params=$stateParams,$scope.user={},$scope.signed=!1,$scope.isSharedSignature=!1;var redirect=function(){$scope.redirect="https://github.com/"+$stateParams.user+"/"+$stateParams.repo,$stateParams.pullRequest&&($scope.redirect=$scope.redirect+"/pull/"+$stateParams.pullRequest),$timeout(function(){$window.location.href=$scope.redirect},5e3)};$scope.agree=function(){if($scope.hasCustomFields)$scope.user.value&&$scope.hasCustomFields&&$RPCService.call("cla","sign",{repo:$stateParams.repo,owner:$stateParams.user,custom_fields:JSON.stringify($scope.customValues)},function(err,signed){$scope.signed=signed.value,$scope.signed&&redirect()});else{var acceptUrl="/accept/"+$stateParams.user+"/"+$stateParams.repo;acceptUrl=$stateParams.pullRequest?acceptUrl+"?pullRequest="+$stateParams.pullRequest:acceptUrl,$window.location.href=acceptUrl}},$scope.signIn=function(){var acceptUrl="/signin/"+$stateParams.user+"/"+$stateParams.repo;$window.location.href=$stateParams.pullRequest?acceptUrl+"?pullRequest="+$stateParams.pullRequest:acceptUrl};var claPromise,userPromise=function(){return $HUBService.call("users","get",{},function(err,res){err||($scope.user=res,$scope.user.value.admin=!1,res.meta&&res.meta.scopes&&res.meta.scopes.indexOf("write:repo_hook")>-1&&($scope.user.value.admin=!0))})}(),repoPromise=function(callback){return $RPCService.call("cla","getLinkedItem",{repo:$stateParams.repo,owner:$stateParams.user},function(err,linkedItem){err&&($scope.noLinkedItemError=err.message||err),callback(linkedItem.value)})}(function(linkedItem){$scope.linkedItem=linkedItem,$scope.linkedItem&&(claPromise=getCLA())});$scope.isValid=function(){function isNotEmpty(value){return!!value||0===value}function typeIsValid(value,field){return typeof value==field.type||field.type.enum||"textarea"==field.type}var valid=!0;return $scope.customKeys.some(function(key){var value=$scope.customValues[key],field=$scope.customFields[key];return!(valid=!field.required||isNotEmpty(value)&&typeIsValid(value,field))}),valid},$scope.showSharedGistMsg=function(){return $scope.linkedItem&&$scope.linkedItem.sharedGist&&(!$scope.signed||$scope.signed&&$scope.isSharedSignature)},$q.all([userPromise,repoPromise]).then(function(){if($scope.user&&$scope.user.value&&$scope.linkedItem){var signedPromise=checkCLA().then(function(signed){signed.value&&$stateParams.redirect&&redirect()});$q.all([claPromise,signedPromise]).then(function(){$scope.signed?getSignedValues():getGithubValues()})}})}]).directive("customfield",[function(){return{templateUrl:"/templates/customField.html",scope:{description:"=",key:"=",logged:"=",min:"=",max:"=",name:"=",required:"=",signed:"=",title:"=",type:"=",value:"="}}}]);var isInArray=function(item,items){function check(linkedItem){return item.full_name?linkedItem.repo===item.name&&linkedItem.owner===item.owner.login||linkedItem.org===item.owner.login:linkedItem.org===item.login}return items.some(check)},deleteFromArray=function(item,array){var i=array.indexOf(item);i>-1&&array.splice(i,1)};module.controller("HomeCtrl",["$rootScope","$scope","$document","$HUB","$RPC","$RPCService","$RAW","$HUBService","$window","$modal","$timeout","$q","$location","utils",function($rootScope,$scope,$document,$HUB,$RPC,$RPCService,$RAW,$HUBService,$window,$modal,$timeout,$q,$location,utils){$scope.active=0,$scope.claRepos=[],$scope.claOrgs=[],$scope.defaultClas=[],$scope.errorMsg=[],$scope.gists=[],$scope.nextstep={step1:!0},$scope.openSettings=!1,$scope.orgs=[],$scope.query={},$scope.repos=[],$scope.reposAndOrgs=[],$scope.selected={},$scope.selectedIndex=-1,$scope.users=[],$scope.user={},$scope.isLoading=!1,$scope.logAdminIn=function(){$window.location.href="/auth/github"};var mixOrgData=function(claOrg){$scope.orgs.some(function(org){if(org.id==claOrg.orgId)return claOrg.avatar_url=org.avatar_url,!0})},getLinkedOrgs=function(){return $scope.claOrgs=[],$RPCService.call("org","getForUser",{}).then(function(data){data&&data.value&&data.value.forEach(function(org){mixOrgData(org),$scope.claOrgs.push(org)})})},mixRepoData=function(claRepo){return $scope.repos.some(function(repo){if(claRepo.repo===repo.name&&claRepo.owner===repo.owner.login)return claRepo.fork=repo.fork,!0}),claRepo},getLinkedRepos=function(){var repoSet=[];return $scope.repos.forEach(function(repo){repoSet.push({repoId:repo.id})}),$RPCService.call("repo","getAll",{set:repoSet}).then(function(data){data&&($scope.claRepos=data.value,$scope.claRepos.forEach(function(claRepo){claRepo=mixRepoData(claRepo)}))})},getRepos=function(){if($scope.user&&$scope.user.value&&$scope.user.value.admin)return $HUBService.call("repos","getAll",{per_page:100,affiliation:"owner,organization_member"}).then(function(data){if(data.value.forEach(function(repo){repo.permissions.push&&$scope.repos.push(repo)}),$scope.repos.length>0)return getLinkedRepos()})},getGists=function(){$scope.gists=[],$scope.defaultClas.length||$scope.getDefaultClaFiles().then(function(){$scope.gists=$scope.gists.concat($scope.defaultClas)}),$scope.gists=$scope.defaultClas.concat([]),$HUBService.call("gists","getAll").then(function(data){data&&data.value&&data.value.forEach(function(gist){var gistFile={};gistFile.name=utils.getGistAttribute(gist,"filename"),gistFile.url=gist.html_url,$scope.gists.push(gistFile)})})},getOrgs=function(){var deferred=$q.defer();return $scope.user.value.org_admin?$RPCService.call("org","getGHOrgsForUser").then(function(res){if(res&&res.value&&($scope.orgs=res.value),$scope.orgs.length>0)return getLinkedOrgs()}):(deferred.resolve(),deferred.promise)},showErrorMessage=function(text){var error=text;$timeout(function(){deleteFromArray(error,$scope.errorMsg)},5e3),$scope.errorMsg.push(error)},linkSuccess=function(){$modal.open({templateUrl:"/modals/templates/linkSuccess.html",controller:"LinkCtrl",windowClass:"link-success",scope:$scope,resolve:{selected:function(){return $scope.selected}}}).result.then(function(){$scope.selected={},$scope.newLink=!1},function(){$scope.selected={},$scope.newLink=!1})},confirmAdd=function(){$modal.open({templateUrl:"/modals/templates/confirmLink.html",controller:"ConfirmCtrl",windowClass:"confirm-add",resolve:{selected:function(){return $scope.selected}}}).result.then(function(){$scope.linkStatus=null,linkSuccess(),$scope.link().then(function(){$scope.linkStatus="linked"},function(){$scope.linkStatus="failed"})})};$scope.confirmRemove=function(linkedItem){$modal.open({templateUrl:"/modals/templates/confirmRemove.html",controller:"ConfirmCtrl",windowClass:"confirm-add",resolve:{selected:function(){return{item:linkedItem}}}}).result.then(function(org){$scope.remove(org)})},$scope.info=function(){$modal.open({templateUrl:"/modals/templates/info_gist.html",controller:"InfoCtrl",windowClass:"howto"})},$scope.addScope=function(){$modal.open({templateUrl:"/modals/templates/add_scope.html",controller:"AddScopeCtrl",windowClass:"howto"}).result.then(function(){$window.location.href="/auth/github?admin=true&org_admin=true"})},$scope.gistShareInfo=function(){$modal.open({templateUrl:"/modals/templates/info_share_gist.html",controller:"InfoCtrl",windowClass:"howto"})},$scope.getDefaultClaFiles=function(){var promise=$RAW.get("/static/cla-assistant.json");return promise.then(function(data){$scope.defaultClas=data["default-cla"]}),promise},$scope.count=function(){$RAW.get("/count/clas").then(function(data){$scope.numberClas=data.count}),$RAW.get("/count/repos").then(function(data){$scope.numberRepos=data.count}),$RAW.get("/count/stars").then(function(data){$scope.numberStars=data.count})},function(){return $rootScope.user={value:{admin:!1}},$HUBService.call("users","get",{},function(err,res){err||($scope.user=res,$scope.user.value.admin=!!(res.meta.scopes&&res.meta.scopes.indexOf("write:repo_hook")>-1),$scope.user.value.org_admin=!!(res.meta.scopes&&res.meta.scopes.indexOf("admin:org_hook")>-1),$rootScope.user=$scope.user,$rootScope.$broadcast("user"))})}().then(function(){$scope.isLoading=!0,$q.all([getOrgs(),getRepos(),getGists()]).then(function(){$scope.reposAndOrgs=$scope.user.value.org_admin?$scope.orgs.concat($scope.repos):$scope.repos,$scope.isLoading=!1},function(){$scope.isLoading=!1})},function(){$scope.count()}),$scope.clear=function($event,obj){$event.stopPropagation(),"repo"===obj?$scope.selected.item=void 0:"gist"===obj&&($scope.selected.gist=void 0)},$scope.isValid=function(gist){return!!gist&&!!gist.match(/https:\/\/gist\.github\.com\/([a-zA-Z0-9_-]*)/)},$scope.isRepo=function(item){return!!item.full_name},$scope.addWebhook=function(item){item.gist&&$RPCService.call("webhook","create",item,function(err,data){!err&&data&&data.value&&(item.active=data.value.active)})},$scope.removeWebhook=function(linkedItem){var arg=linkedItem.org?{org:linkedItem.org}:{repo:linkedItem.repo,owner:linkedItem.owner};$RPCService.call("webhook","remove",arg,function(){})},$scope.linkCla=function(){confirmAdd()};var linkItem=function(obj,item){var linkedArray="org"===obj?$scope.claOrgs:$scope.claRepos,promise1=$RPCService.call(obj,"create",item,function(err,data){err&&err.errmsg.match(/.*duplicate key error.*/)?showErrorMessage("This repository is already set up."):err||!data.value?(err&&err.errmsg&&showErrorMessage(err.errmsg),$scope.removeWebhook(item),deleteFromArray(item,linkedArray)):(linkedArray.push(item),$scope.query.text="")});item.active=!1;var promise2=$scope.addWebhook(item);return $q.all([promise1,promise2])},linkRepo=function(){var newClaRepo={repo:$scope.selected.item.name,owner:$scope.selected.item.owner.login,repoId:$scope.selected.item.id,gist:$scope.selected.gist.url,sharedGist:$scope.selected.sharedGist};return newClaRepo=mixRepoData(newClaRepo),linkItem("repo",newClaRepo)},linkOrg=function(){var newClaOrg={orgId:$scope.selected.item.id,org:$scope.selected.item.login,gist:$scope.selected.gist.url,excludePattern:$scope.selected.item.excludePattern,sharedGist:$scope.selected.sharedGist};return mixOrgData(newClaOrg),linkItem("org",newClaOrg)};$scope.link=function(){return $scope.isRepo($scope.selected.item)?linkRepo():linkOrg()},$scope.remove=function(linkedItem){var api=linkedItem.orgId?"org":"repo",removeArgs=linkedItem.orgId?{orgId:linkedItem.orgId}:{repoId:linkedItem.repoId};$RPCService.call(api,"remove",removeArgs,function(err){if(!err)return"org"===api?getLinkedOrgs():getLinkedRepos()}),$scope.removeWebhook(linkedItem)},$scope.isActive=function(viewLocation){return viewLocation===$location.url()},$scope.groupDefaultCla=function(gist){var found=!1;return $scope.defaultClas.some(function(defCla){if(gist.url===defCla.url)return found=!0}),found?"Default CLAs":"My Gist Files"},$scope.groupOrgs=function(item){return item.full_name?"Repositories":"Organisations"}}]).directive("feature",["$window",function(){return{templateUrl:"/templates/feature.html",scope:{id:"@",iconSrc:"@",header:"@",text:"@"}}}]).directive("textSlider",["$window","$timeout",function($window,$timeout){return{scope:{time:"@",active:"="},link:function(scope,element){var children=element.children(),start=function(){$timeout(function(){scope.active=scope.active+1===children.length?0:scope.active+1,start()},scope.time)};start()}}}]),filters.filter("notIn",function(){return function(items,arr){if(0===arr.length)return items;var notMatched=[];return items.forEach(function(item){isInArray(item,arr)||notMatched.push(item)}),notMatched}}),module.controller("MyClaCtrl",["$scope","$filter","$HUB","$RAW","$RPCService","$HUBService","$modal","utlis",function($scope,$filter,$HUB,$RAW,$RPCService,$HUBService,$modal,utils){function getLinkedGist(signedCLA){return $RPCService.call("cla","getGist",{repo:signedCLA.repo,owner:signedCLA.owner},function(err,data){!err&&data.value&&(signedCLA.newCLA=data.value)})}function checkCLA(signedCLA){return $RPCService.call("cla","check",{repo:signedCLA.repo,owner:signedCLA.owner},function(err,signed){!err&&signed.value&&signed?signedCLA.signed=!0:(signedCLA.signed=!1,getLinkedGist(signedCLA))})}$scope.repos=[],$scope.gists=[],$scope.signedCLAs=[],$scope.signedCLAs=[],$scope.users=[],$scope.user={},$scope.defaultClas=[];var orderBy=$filter("orderBy"),getSignedCLA=function(){return $RPCService.call("cla","getSignedCLA",{user:$scope.user.value.login},function(err,data){if(!err&&data){$scope.signedCLAs=data.value;for(var i=0;i<$scope.signedCLAs.length;i++)$scope.getGist($scope.signedCLAs[i]),$scope.getVersionStatus($scope.signedCLAs[i])}})};$scope.getGist=function(repo){$RPCService.call("cla","getGist",{repo:repo.repo,owner:repo.owner,gist:{gist_url:repo.gist_url,gist_version:repo.gist_version}},function(err,data){!err&&data.value&&(repo.gistObj=data.value)})},$scope.getGistName=function(gistObj){return utils.getGistAttribute(gistObj,"filename")},function(){return $scope.user={value:{admin:!1}},$HUBService.call("user","get",{},function(err,res){err||($scope.user=res,$scope.user.value.admin=!1,res.meta.scopes.indexOf("write:repo_hook")>-1&&($scope.user.value.admin=!0))})}().then(function(){getSignedCLA()}),$scope.order=function(predicate,reverse){$scope.signedCLAs=orderBy($scope.signedCLAs,predicate,reverse)},$scope.getDefaultClaFiles=function(){return $RAW.get("/static/cla-assistant.json").then(function(data){$scope.defaultClas=data["default-cla"]})},$scope.getClaView=function(signedCLA){$modal.open({templateUrl:"/modals/templates/claView.html",controller:"ClaViewCtrl",scope:$scope,resolve:{cla:function(){return signedCLA}}})},$scope.getGistVersion=function(gistObj){return utils.getGistAttribute(gistObj,"updated_at")},$scope.getVersionView=function(signedCLA){signedCLA.newCLA?(signedCLA.noCLA=!1,signedCLA.newCLA.html_url!==signedCLA.gist_url?signedCLA.showCLA=!0:signedCLA.showCLA=!1):signedCLA.noCLA=!0,$modal.open({templateUrl:"/modals/templates/versionView.html",controller:"VersionViewCtrl",scope:$scope,resolve:{cla:function(){return signedCLA},noCLA:function(){return signedCLA.noCLA},showCLA:function(){return signedCLA.showCLA}}})},$scope.getVersionStatus=function(signedCLA){checkCLA(signedCLA).then(function(){signedCLA.signed?signedCLA.stat=!0:signedCLA.stat=!1})}}]),module.controller("SettingsCtrl",["$rootScope","$scope","$stateParams","$HUB","$RPC","$RPCService","$HUBService","$window","$sce","$modal","$q","utils",function($rootScope,$scope,$stateParams,$HUB,$RPC,$RPCService,$HUBService,$window,$sce,$modal,$q,utils){function gistArgs(){var args={gist_url:$scope.item.gist};return $scope.gist.history&&$scope.gist.history.length>0&&(args.gist_version=$scope.gist.history[$scope.gistIndex].version),args}$scope.gist={},$scope.gistIndex=0,$scope.admin=!1,$scope.errorMsg=[],$scope.loading=!1,$scope.gistUrlIsValid=!0,$scope.valid={},$scope.signatures={},$scope.contributors=[];var webhook={},csvHeader=["User Name","Repository Owner","Repository Name","CLA Title","Gist URL","Gist Version","Signed At","Signed for Organization"];$scope.csvHeader=csvHeader.concat(),$scope.open_error=function(){$modal.open({templateUrl:"/modals/templates/error_modal.html",controller:"ErrorCtrl"})},$scope.getSignatures=function(linkedItem,gist_version,cb){return $RPC.call("cla","getAll",{repoId:linkedItem.repoId,orgId:linkedItem.orgId,gist:{gist_url:linkedItem.gist,gist_version:gist_version},sharedGist:linkedItem.sharedGist},cb)};var getCustomFields=function(linkedItem,gist_version,cb){utils.getGistContent(linkedItem.repoId,linkedItem.orgId,linkedItem.gist,gist_version).then(function(gistContent){gistContent.hasCustomFields?($scope.csvHeader=csvHeader.concat(),gistContent.customKeys.forEach(function(key){var field=gistContent.customFields[key];$scope.csvHeader.push(field.title||key)}),cb(null,gistContent.customKeys)):cb()},function(err){cb(err)})},getWebhook=function(){return $RPCService.call("webhook","get",{repo:$scope.item.repo,owner:$scope.item.owner,org:$scope.item.org},function(err,obj){!err&&obj&&obj.value&&(webhook=obj.value,$scope.valid.webhook=webhook.active)})};$scope.getContributors=function(gist_version,cb){var customKeys;getCustomFields($scope.item,gist_version,function(err,keys){customKeys=keys||customKeys,$scope.getSignatures($scope.item,gist_version,function(err,data){$scope.contributors=[],data&&data.value&&data.value.length>0&&data.value.forEach(function(signature){var contributor={};if(contributor.user_name=signature.user,contributor.repo_owner=signature.owner,contributor.repo_name=signature.repo,contributor.gist_name=$scope.getGistName(),contributor.gist_url=signature.gist_url,contributor.gist_version=signature.gist_version,contributor.signed_at=signature.created_at,contributor.org_cla=signature.org_cla,customKeys&&signature.custom_fields){var customFields=JSON.parse(signature.custom_fields);customKeys.forEach(function(key){contributor[key]=customFields[key]})}$scope.contributors.push(contributor)}),"function"==typeof cb&&cb()})})},$scope.getGist=function(){return $RPCService.call("cla","getGist",{repo:$scope.item.repo,owner:$scope.item.owner,gist:gistArgs()},function(err,data){!err&&data.value&&($scope.gist=data.value,$scope.valid.gist=!(!$scope.gist||!$scope.gist.id),getCustomFields($scope.item,gistArgs().gist_version,function(err){$scope.valid.gist=!err&&$scope.valid.gist})),$scope.gist.linked=!0})},$scope.getGistName=function(){return $scope.gist.fileName=$scope.gist.fileName?$scope.gist.fileName:utils.getGistAttribute($scope.gist,"filename"),$scope.gist.fileName},$scope.validateLinkedItem=function(){var promises=[];$scope.item.gist&&($scope.loading=!0,promises.push($scope.getGist()),promises.push(getWebhook()),$q.all(promises).then(function(){$scope.signatures=$scope.getSignatures($scope.item,gistArgs().gist_version),$scope.loading=!1}))},$scope.isLinkActive=function(){return!$scope.loading&&$scope.valid.gist&&$scope.valid.webhook},$scope.renderHtml=function(html_code){return $sce.trustAsHtml(html_code)};var report=function(linkedItem){$modal.open({templateUrl:"/modals/templates/report.html",controller:"ReportCtrl",windowClass:"report",scope:$scope,resolve:{item:function(){return linkedItem}}})};$scope.getReport=function(){$scope.signatures.value.length>0&&$scope.getContributors(gistArgs().gist_version),report($scope.item)};var validateRepoPr=function(repo,owner){$scope.validatePR=$RPC.call("cla","validatePullRequests",{repo:repo,owner:owner},function(){$scope.popoverIsOpen=!1})},validateOrgPr=function(linkedItem){$RPCService.call("cla","validateOrgPullRequests",{org:linkedItem.org}).then(function(){$scope.popoverIsOpen=!1})};$scope.recheck=function(linkedItem){linkedItem.org?validateOrgPr(linkedItem):validateRepoPr(linkedItem.repo,linkedItem.owner)},$scope.upload=function(linkedItem){$scope.popoverIsOpen=!1,$modal.open({templateUrl:"/modals/templates/upload.html",controller:"UploadCtrl",windowClass:"upload"}).result.then(function(users){$RPCService.call("cla","upload",{repo:linkedItem.repo,owner:linkedItem.owner||linkedItem.org,users:users}).then($scope.validateLinkedItem)})},$scope.getBadge=function(claRepo){$scope.popoverIsOpen=!1,$modal.open({templateUrl:"/modals/templates/badge.html",controller:"BadgeCtrl",windowClass:"get-badge",resolve:{repo:function(){return claRepo}}})},$scope.validateLinkedItem()}]),module.directive("settings",["$document",function($document){return{templateUrl:"/templates/settings.html",controller:"SettingsCtrl",transclude:!0,scope:{item:"=",user:"=",repos:"="},link:function(scope,element){var documentClickHandler=function(event){element[0]!==event.target&&0===element.find(event.target).length&&scope.$apply(function(){scope.popoverIsOpen=!1})};$document.on("click",documentClickHandler),scope.$on("$destroy",function(){$document.off("click",documentClickHandler)})}}}]),module.controller("AddScopeCtrl",function($scope,$modalInstance,$window){$scope.origin=$window.location.origin,$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.ok=function(){$modalInstance.close()}}),module.controller("BadgeCtrl",function($scope,$modalInstance,$window,repo){$scope.claRepo=repo,$scope.badgeUrl=$window.location+"readme/badge/"+repo.owner+"/"+repo.repo,$scope.linkUrl=$window.location+repo.owner+"/"+repo.repo,$scope.types=[{type:"HTML",url:'<a href="'+$scope.linkUrl+'"><img src="'+$scope.badgeUrl+'" alt="CLA assistant" /></a>'},{type:"Image URL",url:$scope.badgeUrl},{type:"Markdown",url:"[![CLA assistant]("+$scope.badgeUrl+")]("+$scope.linkUrl+")"},{type:"Textile",url:"!"+$scope.badgeUrl+"(CLA assistant)!:"+$scope.linkUrl},{type:"RDOC",url:'{<img src="'+$scope.badgeUrl+'" alt="CLA assistant" />}['+$scope.linkUrl+"]"}],$scope.selectedType={},$scope.selectedType.type=$scope.types[0],$scope.cancel=function(){$modalInstance.dismiss("cancel")}}).directive("ngClipboard",function(){return{restrict:"A",scope:{ngClipboardSuccess:"&",ngClipboardError:"&"},link:function(scope,element){var clipboard=new Clipboard(element[0]);clipboard.on("success",function(e){scope.ngClipboardSuccess({e:e})}),clipboard.on("error",function(e){scope.ngClipboardError({e:e})})}}}),module.controller("ClaViewCtrl",function($scope,$modalInstance,$window,cla,$state,$RPCService,$sce,utils){$scope.claObj=cla,$scope.cla=null,$scope.modalInstance=$modalInstance,$scope.getGistName=function(gistObj){return utils.getGistAttribute(gistObj,"filename")},function(){return $RPCService.call("cla","get",{repo:$scope.claObj.repo,owner:$scope.claObj.owner,gist:{gist_url:$scope.claObj.gist_url,gist_version:$scope.claObj.gist_version}},function(err,gist){err||($scope.claText=gist.value.raw)})}().then(function(data){$scope.cla=$sce.trustAsHtml(data.value.raw),$scope.cla.text=data.value.raw}),$scope.cancel=function(){$modalInstance.dismiss("cancel")}}).directive("clacontent",[function(){return{link:function(scope,element,attrs){scope.$watch(attrs.clacontent,function(content){if(content){var linkIcons=element[0].getElementsByClassName("octicon octicon-link");for(var index in linkIcons)linkIcons.hasOwnProperty(index)&&angular.element(linkIcons[index]).removeClass("octicon octicon-link")}})}}}]),module.controller("ConfirmCtrl",function($scope,$modalInstance,$window,$timeout,selected){$scope.gist=selected&&selected.gist?selected.gist:null,$scope.item=selected&&selected.item?selected.item:null,$scope.ok=function(){$modalInstance.close(selected.item)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("ErrorCtrl",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("InfoCtrl",function($scope,$modalInstance,$window){$scope.origin=$window.location.origin,$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("LinkCtrl",function($scope,$modalInstance){$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("ReportCtrl",function($scope,$modalInstance,$window,item){$scope.claItem=item,$scope.newContributors={loading:!1},$scope.history=$scope.gist.history.concat({text:"All versions"}),$scope.selectedVersion={},$scope.selectedVersion.version=$scope.gist.history[0],$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),module.controller("UploadCtrl",function($scope,$modalInstance){$scope.json={},$scope.$watch("file",function(){$scope.file&&Papa.parse($scope.file,{complete:function(data){$scope.json=data}})}),$scope.upload=function(index){for(var data=[],i=$scope.header?1:0;i<$scope.json.data.length;i++)data.push($scope.json.data[i][index]);$modalInstance.close(data)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}).directive("fileModel",function(){return{scope:{fileModel:"="},link:function(scope,elem){elem.bind("change drop",function(change){var reader=new FileReader;reader.onload=function(load){scope.$apply(function(){scope.fileModel=load.target.result})},reader.readAsText(change.target.files[0])}),elem.bind("ondragenter",function(){console.log("dude...")})}}}),module.controller("VersionViewCtrl",function($scope,$rootScope,$modalInstance,cla,$location,noCLA,showCLA,$window){$scope.claObj=cla,$scope.noCLA=noCLA,$scope.showCLA=showCLA,$scope.cla=null,$scope.modalInstance=$modalInstance,$scope.newCLA=null,$scope.openNewCla=function(){$modalInstance.dismiss("Link opened"),$window.location.href="/"+$scope.claObj.owner+"/"+$scope.claObj.repo},$scope.openRevision=function(){$window.open($scope.claObj.gist_url+"/revisions")},$scope.cancel=function(){$modalInstance.dismiss("cancel")}});var reservedGistFileNames=["metadata"];module.factory("utils",["$q","$RPCService",function($q,$RPCService){return{getGistAttribute:function(gist,attribute){var attr;return gist&&gist.files&&(Object.keys(gist.files).some(function(file){if(reservedGistFileNames.indexOf(file)<0)return attr=file,!0}),attr=gist.files[attr][attribute]?gist.files[attr][attribute]:attr),attr},getGistContent:function(repoId,orgId,gist_url,gist_version){var deferred=$q.defer(),gistContent={},args={repoId:repoId,orgId:orgId};return gist_url&&(args.gist={gist_url:gist_url,gist_version:gist_version}),$RPCService.call("cla","get",args,function(err,cla){
if(err)deferred.reject(err);else if(gistContent.claText=cla.value.raw,cla.value.meta)try{var metaString=cla.value.meta.replace(/<p>|<\/p>|\n|\t/g,"");gistContent.customFields=JSON.parse(metaString),gistContent.customKeys=Object.keys(gistContent.customFields),gistContent.hasCustomFields=!0,deferred.resolve(gistContent)}catch(ex){deferred.reject(ex)}else deferred.resolve(gistContent)}),deferred.promise}}}]);
//# sourceMappingURL=app.min.js.map